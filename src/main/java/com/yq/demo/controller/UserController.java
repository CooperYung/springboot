package com.yq.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.yq.demo.domain.User;
import com.yq.demo.repository.UserRepository;



@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/find") // Map ONLY GET Requests
    public @ResponseBody Iterable<User> findByName (@RequestParam String name) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        return userRepository.findByName(name);
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path="/init")
    public @ResponseBody Iterable<User> insertInitialUsers() {
        // This returns a JSON or XML with the users
        User user = new User();
        user.setName("张三");
        user.setEmail("zhangsan@qq.com");
        userRepository.save(user);

        user = new User();
        user.setName("李四");
        user.setEmail("lisi@qq.com");
        userRepository.save(user);

        user = new User();
        user.setName("王五");
        user.setEmail("wangwu@qq.com");
        userRepository.save(user);

        return userRepository.findAll();
    }

    @GetMapping(path="/delete")
    public @ResponseBody String deleteAllUsers() {
         userRepository.deleteAll();
         return  "delete all";
    }
}